.make-column(@large, @medium, @small: 12, @tiny: 12) {
  // Note that the order must be from smallest to biggest for responsiveness.
  .make-xs-column(@tiny);
  .make-sm-column(@small);
  .make-md-column(@medium);
  .make-lg-column(@large);
}

.make-column-offset(@large, @medium, @small: 0, @tiny: 0) {
  // Note that the order must be from smallest to biggest for responsiveness.
  .make-xs-column-offset(@tiny);
  .make-sm-column-offset(@small);
  .make-md-column-offset(@medium);
  .make-lg-column-offset(@large);
}

// Makes a fixed width column.
.make-fixed-column(@float, @width) {
  // This column must be positioned, so that if it is placed beside a fluid column
  // that places padding over it, the new stacking context makes the content in
  // this column selectable.
  position: relative;
  // The z-index is added in case positioning is added to a fluid column beside
  // this column.
  z-index: 10;
  float: @float;
  width: @width;
}

// Makes a fluid width column. The width of the column is 100% minus the margin.
.make-fluid-column(@float, @margin) {
  float: @float;
  width: 100%;
}
.make-fluid-column(@float, @margin) when (@float = right) {
  padding-left: @margin;
  margin-left: -(@margin);
}
.make-fluid-column(@float, @margin) when (@float = left) {
  padding-right: @margin;
  margin-right: -(@margin);
}

.inline-list() {
  li {
    display: inline-block;

    &.active{

    }
    &+li:before {
      content: '|';
      padding-right: 4px;
    }
  }
}

.reset-list() {
  margin: 0;
  padding: 0;
  list-style: none;
}

.reset-button-styles {
  border: none;
  background-color: transparent;
  padding: 0;
}

// Vertically aligns one or more rows of text inside the span of this element.
.vertically-align-text(@line-height) {
  min-height: 2 * @line-height;
  line-height: 2 * @line-height;
  span {
    line-height: @line-height;
    display: inline-block;
    vertical-align: middle;
  }
}
